$('#login-error-div').hide();

function capitaliseFirstLetter(string) {
	return string.charAt(0).toUpperCase() + string.slice(1);
}

$(document).ready(function() {
	// FLOAT TO TOP RIGHT BUTTON
	// hide #back-top first
	$(".back-top").hide();

	// fade in #back-top
	$(function() {
		$(window).scroll(function() {
			if ($(this).scrollTop() > 500) {
				$('.back-top').fadeIn();
			} else {
				$('.back-top').fadeOut();
			}
		});

		// scroll body to 0px on click
		$('.back-top a').click(function() {
			$('body,html').animate({
				scrollTop : 0
			}, 500);
			return false;
		});
	});
	// END : FLOAT TO TOP RIGHT BUTTON
	$('.choose-logo-btn').click(function() {
		$('#hidden-logo-input').click();
		return false;
	});

	$('.photo-btn-click').click(function() {
		$('#hidden-photo-input').click();
		return false;
	});

	$('.uploadDocs').click(function() {
		$('#uploadDocs').click();
		return false;
	});

	$('.projectPhoto').click(function() {
		$('#projectPhoto').click();
		return false;
	});

	$('.projectDocument').click(function() {
		$('#projectDocument').click();
		return false;
	});

	$("#accordion").accordion({
		collapsible : false,
		heightStyle : "content",
	});

	// Application of CSS rules for highlighting when you select user type on
	// register page, this place is also used to add heading on div in the 2nd
	// accordion
	$('.reg-select').click(function() {
		$('.reg-select').addClass('btn-default');
		$('.reg-select').removeClass('btn-info');
		division = '#' + $(this).html().toLowerCase();
		var type = $(this).html().toLowerCase();
		$('#userType').val(type);
		$('#profession').html(capitaliseFirstLetter(type));
		$(this).addClass('btn-info');
	});

	// Date picker for DOB in student registration
	/*	$('#dateOfBirthDatePicker').datepicker({
		dateFormat : 'yy-mm-dd',
		changeYear : true,
		changeMonth : true,
		//yearRange : '1940:2013'
		yearRange : '-74:+0',
			 onSelect: function (selectedDate) {
	                var date = $(this).datepicker('getDate');
	                if (date) {
	                      date.setDate(date.getDate() - 1);
	                }
	                $('#studentCompletionYear').datepicker('option', 'maxDate', date || 0);
	          }

	});*/
	$('#dateOfBirthDatePicker').datepicker({
		dateFormat : 'yy-mm-dd',
		defaultDate: "+1w",
		changeYear : true,
		changeMonth : true,

		//yearRange : '1940:2013'
		yearRange : '-100:+0',

		onClose: function( selectedDate ) {
			$( "#studentCompletionYear" ).datepicker( "option", "minDate", selectedDate);
		}
	/*	 onSelect: function (selectedDate) {
				  var date = $(this).datepicker('getDate');
	                if (date) {
	                      date.setDate(date.getDate() - 1);
	                }
	                $('#studentCompletionYear').datepicker('option', 'minDate', date || 0);

	          }*/


	});

	// Date picker for Completion year in student registration
	$('#studentCompletionYear').datepicker({

		dateFormat : 'yy-mm-dd',
		defaultDate: "+1w",

		changeYear : true,
		changeMonth : true,
		yearRange : '-100:+36',

		onClose: function( selectedDate ) {
			$( "#dateOfBirthDatePicker" ).datepicker( "option", "maxDate", selectedDate);
		}
	/*onSelect: function (selectedDate) {
                var date = $(this).datepicker('getDate');
                if (date) {
                      date.setDate(date.getDate() - 1);
                }
                var minDate = $('#dateOfBirthDatePicker').datepicker('getDate');

                $('#studentCompletionYear').datepicker('option', 'minDate', minDate);
                $('#studentCompletionYear').datepicker('option', 'maxDate', date || 0);
          }*/
	});

	$('#projectStartDate').datepicker({
		'dateFormat' : 'd-M-yy',
		maxDate: 0,
		minDate : 0,
		maxDate : '+50y',
		changeYear : true,
		changeMonth : true,

		onSelect: function(dateStr) {     
			var selectedDate = new Date(dateStr);
			var msecsInADay = 86400000;
			var endDate = new Date(selectedDate.getTime() + msecsInADay);
			/*$("#projectEndDate").datepicker("option", "minDate", endDate);
 			$("#projectEndDate").datepicker("option", "maxDate", '+1y');*/
			$('#projectYear').val($('#projectStartDate').val().split('-')[2]);
			var date = $(this).datepicker('getDate');
			if (date) {
				date.setDate(date.getDate() + 1);
			}
			$('#projectEndDate').datepicker('option', 'minDate', date);
		}
	});
	/*$('#projectStartDate').datepicker({
		'dateFormat' : 'd-M-yy',
		minDate : 0,
		//maxDate : '+2y',
		changeYear : true,
		changeMonth : true,
		yearRange : '-10:+40',
		onSelect : function(date) {
			var selectedDate = new Date(date);
			var msecsInADay = 86400000;
			var endDate = new Date(selectedDate.getTime() + msecsInADay);
			$("#projectEndDate").datepicker("option", "minDate", endDate);
			$("#projectEndDate").datepicker("option", "maxDate", '+1y');
			$('#projectYear').val($('#projectStartDate').val().split('-')[2]);
			$("#projectEndDate").val("");
			$("#projectEndDate").removeAttr('disabled');
		}
	});*/
	$('#projectEndDate').datepicker({
		'dateFormat' : 'd-M-yy',
		maxDate: 0,
		minDate : 0,
		maxDate : '+50y',
		changeYear : true,
		changeMonth : true,

		onSelect: function (selectedDate) {
			var start = $('#projectStartDate').datepicker('getDate');
			var end = $('#projectEndDate').datepicker('getDate');
			var days = (end - start) / 1000 / 60 / 60 / 24;
			$('#projectDuration').val(parseInt(days / 30));
			var date = $(this).datepicker('getDate');
			if (date) {
				date.setDate(date.getDate() - 1);
			}
			$('#projectStartDate').datepicker('option', 'maxDate', date || 0);
		}
	});


	$('#challengStartDate').datepicker({
		'dateFormat' : 'd-M-yy',
		maxDate: 0,
		minDate : 0,
		maxDate : '+30y',
		changeYear : true,
		changeMonth : true,

		onSelect: function(dateStr) {     
			var date = $(this).datepicker('getDate');
			if (date) {
				date.setDate(date.getDate() + 1);
			}
			$('#challengCloseDate').datepicker('option', 'minDate', date);
		}
	});
	$('#challengCloseDate').datepicker({
		'dateFormat' : 'd-M-yy',
		maxDate: 0,
		minDate : 0,
		maxDate : '+30y',
		changeYear : true,
		changeMonth : true,

		onSelect: function (selectedDate) {
			var date = $(this).datepicker('getDate');
			if (date) {
				date.setDate(date.getDate() - 1);
			}
			$('#challengStartDate').datepicker('option', 'maxDate', date || 0);
		}
	});

	// ACCORDIONS FOR ADD PROJECT
	$('.continue-btn').click(function(e) {
		e.preventDefault();
		$('.acc-pi').trigger('click');
	});

	$('.add-button').click(function(e) {
		e.preventDefault();
		$('.acc-pi-2').trigger('click');
	});

	$('.continue-btn-2').click(function(e) {
		e.preventDefault();
		$('.acc-pi-1').trigger('click');
	});

	// END : ACCORDIONS FOR ADD PROJECT
	// ACCORDIONS FOR REGISTER
	$('.reg-ctn-1').click(function(e) {
		e.preventDefault();
		//$('[data-toggle=tooltip]').tooltip();
		$('.reg-acc-2').trigger('click');
	});

	$('.reg-ctn-2').click(function(e) {
		e.preventDefault();
		//$('[data-toggle=tooltip]').tooltip();
		$('.reg-acc-3').trigger('click');
	});

	$('#saveChanges').unbind('click').click(function(e) {
		e.preventDefault();
		$.post('editProfileRequest', $('#editProfileForm').serialize(), function(data) {
			if (data.indexOf("success") >= 0) {
				data = "Profile Saved";
				$('.edit-response-panel').addClass("panel-success");
				$('.edit-response-panel').removeClass("panel-danger");
			} else {
				$('.edit-response-panel').removeClass("panel-success");
				$('.edit-response-panel').addClass("panel-danger");
			}
			$('.edit-response-panel').show();
			$('.edit-response').html(data);
		});
	});







	$('.edit-project-submit').unbind('click').click(function(e) {
		e.preventDefault();
		error = false;

		errorString = '';
		var  v = grecaptcha.getResponse();

		if(v.length == 0)
		{
			error = true;

			errorString = 'You can not leave Captcha Code empty';
			$('getnewcaptcha').show();
		}

		/*var cval=$('#captchavalue span').text();
        if (($('#captcha').val()== "") ||($('#captcha').val() != parseInt(cval))){



               error = true;

               errorString = 'Captcha failed';



        }*/
		if (error) {
			$('.error-place').show();
			$('.error').html(errorString);
			errorString = "";
			$('html, body').animate({
				scrollTop : $('.error-place').offset().top
			}, 500);
		} else {
			$('.error-place').hide();
			$('.error').html('');

			$.post('editProjectRequest?res='+v, $('#editProjectInformation').serialize() +"&"+ $('#editDetailedProjectInformationForm').serialize(), function(data) {
				if (data.status == 'success') {
					alert(data);
					data = "Project Updated succesfully. Please use manage project section to manage your projects";
					$('.edit-project-response-panel').addClass("panel-success");
					$('.edit-project-response-panel').removeClass("panel-danger");
				} else if(data.indexOf("success")!= -1){
					data = "Project Updated succesfully. Please use manage project section to manage your projects";
					$('.edit-project-response-panel').addClass("panel-success");
					$('.edit-project-response-panel').removeClass("panel-danger");
				}else if (data === 'Captcha Invalid'){
					data = "Invalid Captcha";
					$('.edit-project-response-panel').removeClass("panel-success");
					$('.edit-project-response-panel').addClass("panel-danger");
				} 
				else {

					data = "Some error occured while creating the project";
					$('.edit-project-response-panel').removeClass("panel-success");
					$('.edit-project-response-panel').addClass("panel-danger");
				}
				$('.edit-project-response-panel').show();
				$('.edit-project-response').html(data);
			});
		}
	});


	$('.add-project-submit').unbind('click').click(function(e) {
		//console.log("src"+document.getElementById('img_id').getAttribute('src'));
		var imgByteArray=document.getElementById('img_id').getAttribute('src').substring(23,document.getElementById('img_id').getAttribute('src').length+1);
		var imgName=$("#hidden-photo-input").val().substring(12,$("#hidden-photo-input").val().length+1);

		var footerImgName=$("#hidden-photo-input-footer").val().substring(12,$("#hidden-photo-input-footer").val().length+1);
		var	footerImgByteArray=document.getElementById('img_id_footer').getAttribute('src').substring(23,document.getElementById('img_id_footer').getAttribute('src').length+1);

		e.preventDefault();
		var challengeId = $('#challengeId').val();
		error = false;

		errorString = '';

		var  v = grecaptcha.getResponse();

		if(v.length == 0)
		{
			error = true;

			errorString = 'You can not leave Captcha Code empty';
			$('getnewcaptcha').show();
		}

		//  var cval=$('#captchavalue span').text();

		/*var newcval=parseInt(cval);

	        var inputval=$('#captcha').val();

	        var newinputval=inputval.toString();

	        alert(newcval+newinputval);*/
		/*
	        if (($('#captcha').val()== "") ||($('#captcha').val() != parseInt(cval))){



	               error = true;

	               errorString = 'Captcha failed';



	        }*/
		if (error) {
			$('.error-place').show();
			$('.error').html(errorString);
			errorString = "";
			$('html, body').animate({
				scrollTop : $('.error-place').offset().top
			}, 500);
		} else {
			$('.error-place').hide();
			$('.error').html('');




			if (challengeId === undefined) {

				$.post('addProjectRequest?res='+v, $('#addProjectInformation').serialize()+"&"+ $('#addDetailedProjectInformationForm').serialize() + "&imgName=" + imgName + "&imgByteArray=" + encodeURIComponent(imgByteArray)+ "&footerImgName=" + footerImgName + "&footerImgByteArray=" + encodeURIComponent(footerImgByteArray), function(data) {
					console.log($('#addProjectInformation').serialize());
					
					if (data === 'Y') {
						data = "Project created succesfully. Please use manage project section to manage your projects";
						$('.add-project-response-panel').addClass("panel-success");
						$('.add-project-response-panel').removeClass("panel-danger");
						$('.add-project-submit').hide();
					} else if(data.indexOf("success")!= -1){
						data = "Project created succesfully. Please use manage project section to manage your projects";
						$('.add-project-response-panel').addClass("panel-success");
						$('.add-project-response-panel').removeClass("panel-danger");
						$('.add-project-submit').hide();
					}else if (data === 'Captcha Invalid'){
						data = "Invalid Captcha";
						$('.add-project-response-panel').removeClass("panel-success");
						$('.add-project-response-panel').addClass("panel-danger");
					} 
					else {

						data = "Some error occured while creating the project";
						$('.add-project-response-panel').removeClass("panel-success");
						$('.add-project-response-panel').addClass("panel-danger");
					}
					$('.add-project-response-panel').show();
					$('.add-project-response').html(data);
				});
			} else {

				$.post('acceptChallengeRequest?res='+v, $('#addProjectInformation').serialize() +"&"+ $('#addDetailedProjectInformationForm').serialize() + "&challengId=" + challengeId+"&imgName=" + imgName + "&imgByteArray=" +encodeURIComponent( imgByteArray)+ "&footerImgName=" + footerImgName + "&footerImgByteArray=" + encodeURIComponent(footerImgByteArray), function(data) {
					if (data === 'Y') {
						data = "Project against challenge created succesfully. Please use manage project section to manage your projects";
						$('.add-project-response-panel').addClass("panel-success");
						$('.add-project-response-panel').removeClass("panel-danger");
						$('.add-project-submit').hide();

					} else  if(data.indexOf("success")!= -1){
						data = "Project created succesfully. Please use manage project section to manage your projects";
						$('.add-project-response-panel').addClass("panel-success");
						$('.add-project-response-panel').removeClass("panel-danger");
						$('.add-project-submit').hide();
					}else if (data === 'Captcha Invalid'){
						data = "Invalid Captcha";
						$('.add-project-response-panel').removeClass("panel-success");
						$('.add-project-response-panel').addClass("panel-danger");
					} else {
						data = "Some error occured while creating the project against challenge";
						$('.add-project-response-panel').removeClass("panel-success");
						$('.add-project-response-panel').addClass("panel-danger");
					}
					$('.add-project-response-panel').show();
					$('.add-project-response').html(data);
				});
			}}
	});
	// END: ACCORDIONS FOR REGISTER

	// ACCORDIONS FOR ADD CHALLENGE

	$('.continue-addChallenge').click(function(e) {
		e.preventDefault();
		$('.addChallenge-accordion-2').trigger('click');a
	});

	$('.add-challenge-button').click(function(e) {
		e.preventDefault();
		$('.addChallenge-accordion-3').trigger('click');
	});


	$('.addChallenge-accordion-1').click(function() {
		$('html, body').animate({
			scrollTop : $('.addChallenge-accordion-1').offset().top
		}, 500);

	});

	$('#add-challenge-button').unbind('click').click(function(e) {
		e.preventDefault();

		error = false;

		errorString = '';

		var v = grecaptcha.getResponse();

		if(v.length == 0)
		{
			error = true;

			errorString = 'You can not leave Captcha Code empty';
			$('getnewcaptcha').show();
		}
		// var cval=$('#captchavalue span').text();

		/*var newcval=parseInt(cval);

	        var inputval=$('#captcha').val();

	        var newinputval=inputval.toString();

	        alert(newcval+newinputval);*/

		/* if (($('#captcha').val()== "") ||($('#captcha').val() != parseInt(cval))){



	               error = true;

	               errorString = 'Captcha failed';



	        }*/
		if (error) {
			$('.error-place').show();
			$('.error').html(errorString);
			errorString = "";
			$('html, body').animate({
				scrollTop : $('.error-place').offset().top
			}, 500);
		} else {
			$('.error-place').hide();
			$('.error').html('');
			$('html, body').animate({
				scrollTop : $('.addChallenge-accordion-1').offset().top
			}, 500);
			$.post('addChallengeRequest?res='+v, $('#addChallengeForm').serialize(), function(data) {
				if (data.indexOf("success") >= 0) {
					data = "Your Challenge is added successfully";
					$('.challenge-response-panel').addClass("panel-success");
					$('.challenge-response-panel').removeClass("panel-info");
					$('#add-challenge-button').hide();
				}else if (data === 'Captcha Invalid'){
					data = "Invalid Captcha";
				}  else {
					$('.challenge-response-panel').removeClass("panel-success");
					$('.challenge-response-panel').addClass("panel-info");
				}

				$('.challenge-response-panel').show();
				$('.challenge-response').html(data);
			});
		}
	});
	$('.reg-ctn-3').click(function(e) {

		e.preventDefault();

		error = false;

		errorString = '';

		var cval=$('#captchavalue span').text();

		/*var newcval=parseInt(cval);

        var inputval=$('#captcha').val();

        var newinputval=inputval.toString();

        alert(newcval+newinputval);*/

		/*if (($('#captcha').val()== "") ||($('#captcha').val() != parseInt(cval))){



               error = true;

               errorString = 'Captcha failed';



        }*/

		var v = grecaptcha.getResponse();
		if(v.length == 0)
		{
			error = true;

			errorString = 'You can not leave Captcha Code empty';

		}

		if (error) {

			$('.error-place').show();

			$('.error').html(errorString);

			errorString = "";

			$('html, body').animate({

				scrollTop : $('.error-place').offset().top

			}, 500);

		} else {

			$('.error-place').hide();

			$('.error').html('');


		}

	});
	$('.addChallenge-accordion-1').click(function() {
		$('html, body').animate({
			scrollTop : $('.addChallenge-accordion-1').offset().top
		}, 500);

	});
	// END : ACCORDIONS FOR ADD CHALLENGE

	$('.addFaculty').unbind('click').click(function(e) {
		e.preventDefault();
		$('.dropdown-toggle-faculty').html($(this).html());
		$('#addFaculty').val($(this).html());
	});

	$('#login-submit').unbind('click').click(function(e) {
		e.preventDefault();
		error = false;
		errorString = '';
		var user = $('#user');

		//var user = $('#user');
		var password = $('#password');

		console.log(user.val());
		console.log(password.val());

		if (user.val() === '') {
			error = true;
			errorString += "Please Enter User<br/>";			
			return false;
		}

		if (password.val() === '') {
			error = true;			
			errorString += "Please Enter Password<br/>";
			return false;
		}

		if (error) {

			$('#login-error-div').show();
			$('#login-error-div').html(errorString);			
			return false;

		} else {
			$.post('ajax/login', $('#login-form').serialize(), function(data) {
				if (data === 'success') {
					window.location.href = "dashboard";
				} else {
					$('#login-error-div').show();
					$('#login-error-div').html(data);
				}
				$('#user').val('');
				$('#password').val('');

			});
		}
	});

	$('#forgot-password').unbind('click').click(function(e) {
		e.preventDefault();
		error = false;
		errorString = '';
		var email = $('#email');
		if (email.val() === '') {
			error = true;
			errorString += "Please Enter registered E-mail address<br/>";
		}
		if (error) {
			$('#forgot-password-div').show();
			$('#forgot-password-div').html(errorString);
		}
	});

	$('#add-new-faculty').unbind('click').click(function(e) {
		e.preventDefault();
		$('#add-faculty-popup').dialog({
			title : "Add New Faculty",
			draggable : false,
			modal : true,
			resizable : false,
			closeOnEscape : true,
			width : 300
		});
	});

	$('#add-faculty-submit-button').unbind('click').click(function(e) {
		e.preventDefault();
		$.post('ajax/addNewFaculty', $('#add-new-faculty-form').serialize(), function(data) {
			if (data === 'N') {
				alert('Failed to add a faculty');
			} else {
				$('#projFaculty').append('<option selected="selected" value="' + data + '">' + $('#newFaculty').val() + '</option>');
				$('#add-faculty-popup').dialog("close");
			}

		});
	});

	$('#search-team-members-submit-button').unbind('click').click(function(e) {
		e.preventDefault();
		$.post('ajax/searchTeamMembersOld', $('#search-team-members-form').serialize(), function(data) {
			//alert("into old");

			if(data === ''){

				/*	*/
				$('#fetched-team-members-novalue').show();
				$('#fetched-team-members').hide();
				$('#fetched-team-members-container').show();
				$('#fetched-team-members-novalue').html("No member is found with the above name");

			}else{
				//alert(data);
				$('#fetched-team-members').show();
				$('#fetched-team-members-container').show();
				$('#fetched-team-members').html(data);
				$('#fetched-team-members-novalue').hide();
			}
		});
	});

	$('#choose-selected-team-members').unbind('click').click(function(e) {
		e.preventDefault();

		var data = ($('#fetched-team-members').val());

		if ($('#teamMembers').val() === '') {

			$('#teamMembers').val($('#teamMembers').val() + data);
		} else {
			$('#teamMembers').val($('#teamMembers').val() + "," + data);
		}
		$('#search-team-members-popup').dialog('close');
	});

	$('.fouroverlaymentor').unbind('click').click(function(e) {
		e.preventDefault();
		var id = $(this).find('div:eq(1)').find('a').attr('href');
		window.location.href = id;
	});

	// INFINITE SCROLL
	var setNumber = 0;
	$('.scrollDetect').unbind('click').click(function(e) {
		e.preventDefault();
		$('#ajax-text').hide();
		$('#ajax-loader').show();
		setNumber += 1;
		/* alert(setNumber); */
		$.post('mentorsFetch', {
			"set" : setNumber
		}, function(data) {
			$('#ajax-text').show();
			$('#ajax-loader').hide();
			$('.content').html($('.content').html() + data);
			$(".portofoliothumb").on("hover", function(e) {
				if (e.type == "mouseenter") {
					$(this).find('.projectdetail').show();
				} else {
					$(this).find('.projectdetail').hide();
				}
			});
			$('.projectdetail').hide();
		});
	});

	var setNumber = 0;
	$('.scrollDetectCollaborate').unbind('click').click(function(e) {
		e.preventDefault();
		$('#ajax-text').hide();
		$('#ajax-loader').show();
		setNumber += 1;
		/* alert(setNumber); */
		$.post('collaborateFetch', {
			"set" : setNumber
		}, function(data) {
			$('#ajax-text').show();
			$('#ajax-loader').hide();
			$('.content').html($('.content').html() + data);
			$(".portofoliothumb").on("hover", function(e) {
				if (e.type == "mouseenter") {
					$(this).find('.projectdetail').show();
				} else {
					$(this).find('.projectdetail').hide();
				}
			});
			$('.projectdetail').hide();
		});
	});

	var setNumber = 0;
	$('.challengeScrollDetect').unbind('click').click(function(e) {
		e.preventDefault();
		$('#ajax-text').hide();
		$('#ajax-loader').show();
		setNumber += 1;
		/* alert(setNumber); */
		$.post('challengesFetch', {
			"set" : setNumber
		}, function(data) {
			$('#ajax-text').show();
			$('#ajax-loader').hide();
			$('.content').html($('.content').html() + data);
			$(".portofoliothumb").on("hover", function(e) {
				if (e.type == "mouseenter") {
					$(this).find('.projectdetail').show();
				} else {
					$(this).find('.projectdetail').hide();
				}
			});
			$('.projectdetail').hide();
		});
	});
	// END : INFINITE SCROLL

	$('#login-button-new').unbind('click').click(function(e) {
		e.preventDefault();
		$('#login-form-modal').dialog({
			title : "Enter credentials",
			draggable : false,
			modal : true,
			resizable : false,
			closeOnEscape : true,
			width : 300
		});
	});

	// ADD PROJECT HELPERS
	$('#projectBranches').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 5,
		placeholder : "Branches",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedBranches",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item.projBranchDesc,
							id : item.branchId
						};
					})
				};
			}
		}
	});
	$('#challengeTypeId2').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Type",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getsuggestedchallenges",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item.challengTypeDesc,
							id : item.challengTypeId
						};
					})
				};
			}
		}
	});
	$('#challengeTypeId2').on("select2-blur", function(e) {
		$('#challengeTypeId').val($('#challengeTypeId2').val());
	});

	$('#specializationOfFaculty2').select2({

		minimumInputLength : 1,
		tags : [],
		//tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Branches",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedBranches",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#specializationOfFaculty2').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {

						return {
							text : item.projBranchDesc,
							id : item.branchId
						};
					})
				};
			}
		}
	});

	$('#specializationOfFaculty2').on("select2-blur", function(e) {

		$('#specializationOfFaculty').val($('#specializationOfFaculty2').val());
	});

	$('#branchIdOfMentor2').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Branches",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedBranches",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#branchIdOfMentor2').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {

						return {
							text : item.projBranchDesc,
							id : item.branchId
						};
					})
				};
			}
		}
	});

	$('#branchIdOfMentor2').on("select2-blur", function(e) {
		$('#branchIdOfMentor').val('');
		$('#branchIdOfMentor').val($('#branchIdOfMentor2').val());
	});
	$('#branchIdOfStudent2').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Branches",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedBranches",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#branchIdOfStudent2').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {

						return {
							text : item.projBranchDesc,
							id : item.branchId
						};
					})
				};
			}
		}
	});

	$('#branchIdOfStudent2').on("select2-blur", function(e) {

		$('.branchIdOfStudent').val($('#branchIdOfStudent2').val());

	});
	/*$('#branchIdOfStudent2').autocomplete({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			serviceUrl: 'getSuggestedBranches',
			dataType : 'json',
			type : "GET",
			data : function(term) {
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							label : item.projBranchDesc,
							value : item.branchId
						};
					})
				};
			}
		},
	    onSelect: function (suggestion) {
	        alert('You selected: ' + suggestion.value + ', ' + suggestion.data);
	    }
	});
	 */


	//auto populated state for additional information
	$('#collegeState').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose States",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getStateList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#collegeState').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});

	//auto populated state for additional information-faculty

	$('#collegeState1').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose States",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getStateList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#collegeState1').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});


	//auto populated college list for additional 

	$('#CollegeNames').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose CollegeNames",

		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getCollegeList",
			dataType : 'json',
			type : "POST",
			data :  function(term,statename) {
				//alert($('#collegeState').val());
				return {
					q : term,
					statename:$('#collegeState').val()
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});






	//State and city auto populated drop down
	$('#state').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose States",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getStateList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#state').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});


	$('#city').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose city",

		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getCityList",
			dataType : 'json',
			type : "POST",
			data :  function(term,statename) {
				return {
					q : term,
					statename:$('#state').val()
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});


	/*//Colleges for student
	$('#CollegeNames').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose Colleges",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedCollegeList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#CollegeNames').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});

	 */



	$('#CollegeNames1').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose Colleges",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedCollegeList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#CollegeNames').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});




	$('#CollegeNames2').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose Colleges",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedCollegeList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#CollegeNames').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});



	//Colleges for faculty
	/*$('#collgeOfFaculty').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose Colleges",
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedCollegeList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#collgeOfFaculty').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});
	 */

	$('#collgeOfFaculty').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 1,
		placeholder : "Choose CollegeNames",

		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getCollegeList",
			dataType : 'json',
			type : "POST",
			data :  function(term,statename) {
				//alert($('#collegeState1').val());
				return {
					q : term,
					statename:$('#collegeState1').val()
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});


	//for university student	 	
	$('#universityOfFaculty').select2({ 	 	
		minimumInputLength : 1, 	 	
		tags : [], 	 	
		tokenSeparators : [ "," ], 	 	
		maximumSelectionSize : 1, 	 	
		placeholder : "Choose University", 	 	
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getUniversityList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#universityOfFaculty').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		} 	 	
	}); 	 	

	/*$('#university2').on("select2-blur", function(e) { 	 	
			$('.university').val($('#university2').val()); 	 	

			}); */	 	

	//for university faculty	 	
	$('#university').select2({ 	 	
		minimumInputLength : 1, 	 	
		tags : [], 	 	
		tokenSeparators : [ "," ], 	 	
		maximumSelectionSize : 1, 	 	
		placeholder : "Choose University", 	 	
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getUniversityList",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				$('#university').val('');
				return {
					q : term
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		} 	 	
	}); 	

	//--------------------------------- 	 	






	$('#projectKeywords').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 5,
		placeholder : "Keywords",
		createSearchChoice : function(term, data) {
			if ($(data).filter(function() {
				return this.text.localeCompare(term) === 0;
			}).length === 0) {
				return {
					id : term,
					text : term
				};
			}
		},
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedKeywords",
			dataType : 'json',
			type : "POST",
			data : function(term) {
				return {
					q : $('#projectBranches').val()
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item,
							id : item
						};
					})
				};
			}
		}
	});

	$('#projFaculty').select2({
		minimumInputLength : 1,
		tags : [],
		tokenSeparators : [ "," ],
		maximumSelectionSize : 5,
		placeholder : "Choose faculty",
		createSearchChoice : function(term, data) {
			if ($(data).filter(function() {
				return this.text.localeCompare(term) === 0;
			}).length === 0) {
				return {
					id : term,
					text : term
				};
			}
		},
		ajax : { // instead of writing the function to
			// execute the request we
			// use Select2's convenient helper
			url : "getSuggestedFaculty",
			dataType : 'json',
			type : "GET",
			data : function(term) {
				return {
					q : {}
				};
			},
			results : function(data) {
				return {
					results : $.map(data, function(item) {
						return {
							text : item[1],
							id : item[0]
						};
					})
				};
			}
		}
	});

	$('#myModal').on('shown.bs.modal', function() {
		$('#user').focus();
	});

	$('#search-new-members-button').unbind('click').click(function(e) {
		e.preventDefault();
		$('#search-new-members-popup').dialog({
			title : "Enter search parameters",
			draggable : false,
			modal : true,
			position : false,
			resizable : false,
			closeOnEscape : true,
			width : 500,
			closeOnEscape : true,
			show : "slow",
			model : true,
			minWidth : 600

		});
	});

	$('#search-new-members-submit-button').unbind('click').click(function(e) {
		e.preventDefault();
		$.post('ajax/searchTeamMembers', $('#search-team-members-form').serialize(), function(data) {

			$('#fetched-team-members-container').show();
			$('#fetched-team-members').html(data);
		});
	});



	$('#choose-selected-new-members').unbind('click').click(function(e) {
		e.preventDefault();
		$.post('ajax/addNewMember', $('#search-new-members-form').serialize(), function(data) {

			$('#added-new-members').html(data);
			$('#search-new-members-popup').dialog("close");

		});
	});
	$('#password').hover(function() {
		$('#password').tooltip({
			show: {
				effect: "slideDown",
				delay: 250
			}


		});
	});
	$( "#teamMembers" ).keydown(function(e) {
		if (e.which === 8 && !$(e.target).is("input, textarea")) {
			e.preventDefault();
		}
	});


});

