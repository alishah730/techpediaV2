<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd     
                    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- To be put before component scan as part of spring resteasy integration for Autowiring to work -->
	<bean class="org.jboss.resteasy.plugins.spring.SpringBeanProcessorServletAware"/>
    
 	<!-- Scans within the base package of the application for @Component classes to configure as beans -->
    <context:component-scan base-package="com.ge.techpedia.service, com.techpedia.projectmanagement.dao" />
    
    <!-- to activate annotations in beans already registered in the application context Use any one of the below -->
    <context:annotation-config /> 
    <!-- <mvc:annotation-driven /> -->
    
    <!-- Enable Annotation based Declarative Transaction Management -->
    <tx:annotation-driven proxy-target-class="false" transaction-manager="transactionManager" />
 
    <!-- Creating TransactionManager Bean, since JDBC we are creating of type DataSourceTransactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- In case of Autowiring not working and throwing NPE uncomment the below to get the ApplicationContext and get beans indiviually -->
    <!-- <bean id="applicationContextProvider" class="com.ge.techpedia.config.ApplicationContextProvider"/>  -->
    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://3.235.228.22:3306/techpedia" />
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>
    
</beans>